from z3 import *

str1 = [
    0x4f,0x3b,0x23,0x11,0xe1,0x1f,0xfe,0xb3,0x4b,0xdd,0x75,0xfe,0x47,0xec,0xf2,0x43,0xdc,0x38,0xd4,0x64,0xde,0x45,0xbd,0x01,0x1b,0x04,0xb9,0x89,0x7d,0xb6,0x4e,0xe2]

str2 = [
    0x6b,0x6e,0x26,0x54,0x56,0x4b,0xe8,0x80,0xdc,0x28,0x46,0x18,0x71,0xcb,0x65,0x44,0x9b,0x2b,0x22,0x82,0x2b,0x56,0x8e,0xe7,0x69,0x41,0x4c,0x1f,0x3a,0x45,0x5c,0x35]

flag = [BitVec("flag%d"%i,16) for i in range(32)]

S = Solver()


for i in range(32):
    S.add(flag[i] > 32)
    S.add(flag[i] < 128)
    S.add((str2[i]^(((16*flag[i])|(flag[i]>>4))%256)) == str1[i])

if S.check() == sat:  
    m = S.model()  
    flag1 = '' 
    for i in range(32):  
       flag1 += chr(m[flag[i]].as_long())    
    print flag1  